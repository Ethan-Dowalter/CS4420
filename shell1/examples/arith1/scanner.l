%{
/*
 * Simple example lex input file
 *
 * Shawn Ostermann -- Sept 9, 2021
 *
 * Headstart version
 */

#include <string.h>
#include <ctype.h>
#include "parser.h"

/* some internal files generated by bison */
void yyerror(const char *s,...);
void yywarn(const char *s,...);


/* Everything up to the funny characters on the next line */
/* goes directly into the lex.yy.c file */
%}

/* shorthand definitions for later */
DIGIT		[0123456789]
LETTER		[a-zA-Z]
OTHERCHARS	[_\./]
WHITESPACE	[ \t]


/* The rest of this after the '%%' is lex rules */
/* you need rules for the other reserved characters */
/* you need a rule that returns WORD */
/* you need a rule that returns "strings" as WORDS */
%%

{WHITESPACE}+	{ }  /* Just ignore white space */

"\n" 	        { return(EOLN); } 

"|"             { return(PIPE); }
"<"             { return(INPUT); }
">"             { return(OUTPUT); }
">>"            { return(OUTPUT_APPEND); }

({LETTER}|{DIGIT})+ 	{
    yylval.string = strdup(yytext);  /* make a copy of the string */
	printf("HI\n");
    return(WORD);
}

.		{
    /* if we haven't matched anything yet, then it's illegal */
    fprintf(stderr, "scanner: Bad character '%c'\n", *yytext);
}


%%
